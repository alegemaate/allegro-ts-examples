{"version":3,"file":"al_exmouse.js","mappings":"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","sources":["webpack://allegro-ts-examples/webpack/runtime/chunk loaded","webpack://allegro-ts-examples/./src/al_exmouse.ts","webpack://allegro-ts-examples/webpack/bootstrap","webpack://allegro-ts-examples/webpack/runtime/compat get default export","webpack://allegro-ts-examples/webpack/runtime/define property getters","webpack://allegro-ts-examples/webpack/runtime/hasOwnProperty shorthand","webpack://allegro-ts-examples/webpack/runtime/jsonp chunk loading","webpack://allegro-ts-examples/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n *    Example program for the Allegro library, by Shawn Hargreaves.\n *\n *    This program demonstrates how to get mouse input. The\n *    first part of the test retrieves the raw mouse input data\n *    and displays it on the screen without using any mouse\n *    cursor. When you press a key the standard arrow-like mouse\n *    cursor appears.  You are not restricted to this shape,\n *    and a second key press modifies the cursor to be several\n *    concentric colored circles. They are not joined together,\n *    so you can still see bits of what's behind when you move the\n *    cursor over the printed text message.\n */\nimport {\n  allegro_init,\n  allegro_message,\n  destroy_bitmap,\n  END_OF_MAIN,\n  install_keyboard,\n  SCREEN_H,\n  SCREEN_W,\n  set_gfx_mode,\n  screen,\n  GFX_TEXT,\n  GFX_AUTODETECT,\n  GFX_SAFE,\n  BITMAP,\n  allegro_error,\n  enable_debug,\n  makecol,\n  textprintf_right_ex,\n  font,\n  mouse_b,\n  install_timer,\n  set_palette,\n  desktop_palette,\n  clear_to_color,\n  install_mouse,\n  textout_centre_ex,\n  readkey,\n  textprintf_centre_ex,\n  poll_mouse,\n  acquire_screen,\n  textout_ex,\n  textprintf_ex,\n  release_screen,\n  vsync,\n  keypressed,\n  clear_keybuf,\n  show_mouse,\n  create_bitmap,\n  bitmap_mask_color,\n  circle,\n  set_mouse_sprite,\n  set_mouse_sprite_focus,\n  mouse_z,\n  mouse_driver,\n  mouse_x,\n  mouse_y,\n  get_mouse_mickeys,\n  mouse_w,\n  palette_color,\n  rest,\n  init_allegro_ts,\n} from \"allegro-ts\";\n\nenable_debug(\"debug\");\n\nasync function print_all_buttons() {\n  let i: number;\n  const fc = makecol(0, 0, 0);\n  const bc = makecol(255, 255, 255);\n  textprintf_right_ex(screen, font, 320, 50, fc, bc, \"buttons\");\n  for (i = 0; i < 8; i++) {\n    const x = 320;\n    const y = 60 + i * 10;\n    if (mouse_b & (1 << i))\n      textprintf_right_ex(screen, font, x, y, fc, bc, \"%2d\", 1 + i);\n    else textprintf_right_ex(screen, font, x, y, fc, bc, \"  \");\n  }\n}\n\nasync function main() {\n  const mickeyx = 0;\n  const mickeyy = 0;\n  let custom_cursor: BITMAP | null = null;\n  let c = 0;\n\n  if (allegro_init() != 0) return 1;\n  install_keyboard();\n  install_timer();\n\n  if (set_gfx_mode(GFX_AUTODETECT, 320, 200, 0, 0) != 0) {\n    if (set_gfx_mode(GFX_SAFE, 320, 200, 0, 0) != 0) {\n      set_gfx_mode(GFX_TEXT, 0, 0, 0, 0);\n      allegro_message(\"Unable to set any graphic mode\\n%s\\n\", allegro_error);\n      return 1;\n    }\n  }\n\n  set_palette(desktop_palette);\n  clear_to_color(screen, makecol(255, 255, 255));\n\n  /* Detect mouse presence */\n  if (install_mouse() < 0) {\n    textout_centre_ex(\n      screen,\n      font,\n      \"No mouse detected, but you need one!\",\n      SCREEN_W / 2,\n      SCREEN_H / 2,\n      makecol(0, 0, 0),\n      makecol(255, 255, 255)\n    );\n    await readkey();\n    return 0;\n  }\n\n  textprintf_centre_ex(\n    screen,\n    font,\n    SCREEN_W / 2,\n    8,\n    makecol(0, 0, 0),\n    makecol(255, 255, 255),\n    \"Driver: %s\",\n    mouse_driver.name\n  );\n\n  do {\n    /* On most platforms (eg. DOS) things will still work correctly\n     * without this call, but it is a good idea to include it in any\n     * programs that you want to be portable, because on some platforms\n     * you may not be able to get any mouse input without it.\n     */\n    poll_mouse();\n\n    acquire_screen();\n\n    /* the mouse position is stored in the variables mouse_x and mouse_y */\n    textprintf_ex(\n      screen,\n      font,\n      16,\n      48,\n      makecol(0, 0, 0),\n      makecol(255, 255, 255),\n      \"mouse_x = %-5d\",\n      mouse_x\n    );\n    textprintf_ex(\n      screen,\n      font,\n      16,\n      64,\n      makecol(0, 0, 0),\n      makecol(255, 255, 255),\n      \"mouse_y = %-5d\",\n      mouse_y\n    );\n\n    /* or you can use this function to measure the speed of movement.\n     * Note that we only call it every fourth time round the loop:\n     * there's no need for that other than to slow the numbers down\n     * a bit so that you will have time to read them...\n     */\n    c++;\n    if ((c & 3) == 0) get_mouse_mickeys(mickeyx, mickeyy);\n\n    textprintf_ex(\n      screen,\n      font,\n      16,\n      88,\n      makecol(0, 0, 0),\n      makecol(255, 255, 255),\n      \"mickey_x = %-7d\",\n      mickeyx\n    );\n    textprintf_ex(\n      screen,\n      font,\n      16,\n      104,\n      makecol(0, 0, 0),\n      makecol(255, 255, 255),\n      \"mickey_y = %-7d\",\n      mickeyy\n    );\n\n    /* the mouse button state is stored in the variable mouse_b */\n    if (mouse_b & 1)\n      textout_ex(\n        screen,\n        font,\n        \"left button is pressed \",\n        16,\n        128,\n        makecol(0, 0, 0),\n        makecol(255, 255, 255)\n      );\n    else\n      textout_ex(\n        screen,\n        font,\n        \"left button not pressed\",\n        16,\n        128,\n        makecol(0, 0, 0),\n        makecol(255, 255, 255)\n      );\n\n    if (mouse_b & 2)\n      textout_ex(\n        screen,\n        font,\n        \"right button is pressed \",\n        16,\n        144,\n        makecol(0, 0, 0),\n        makecol(255, 255, 255)\n      );\n    else\n      textout_ex(\n        screen,\n        font,\n        \"right button not pressed\",\n        16,\n        144,\n        makecol(0, 0, 0),\n        makecol(255, 255, 255)\n      );\n\n    if (mouse_b & 4)\n      textout_ex(\n        screen,\n        font,\n        \"middle button is pressed \",\n        16,\n        160,\n        makecol(0, 0, 0),\n        makecol(255, 255, 255)\n      );\n    else\n      textout_ex(\n        screen,\n        font,\n        \"middle button not pressed\",\n        16,\n        160,\n        makecol(0, 0, 0),\n        makecol(255, 255, 255)\n      );\n\n    /* the wheel position is stored in the variable mouse_z */\n    textprintf_ex(\n      screen,\n      font,\n      16,\n      184,\n      makecol(0, 0, 0),\n      makecol(255, 255, 255),\n      \"mouse_z = %-5d mouse_w = %-5d\",\n      mouse_z,\n      mouse_w\n    );\n\n    print_all_buttons();\n\n    release_screen();\n\n    vsync();\n\n    await rest(16);\n  } while (!keypressed());\n\n  clear_keybuf();\n\n  /*  To display a mouse pointer, call show_mouse(). There are several\n   *  things you should be aware of before you do this, though. For one,\n   *  it won't work unless you call install_timer() first. For another,\n   *  you must never draw anything onto the screen while the mouse\n   *  pointer is visible. So before you draw anything, be sure to turn\n   *  the mouse off with show_mouse(NULL), and turn it back on again when\n   *  you are done.\n   */\n  clear_to_color(screen, makecol(255, 255, 255));\n  textout_centre_ex(\n    screen,\n    font,\n    \"Press a key to change cursor\",\n    SCREEN_W / 2,\n    SCREEN_H / 2,\n    makecol(0, 0, 0),\n    makecol(255, 255, 255)\n  );\n  show_mouse(screen);\n  await readkey();\n  show_mouse(null);\n\n  /* create a custom mouse cursor bitmap... */\n  custom_cursor = create_bitmap(32, 32);\n  clear_to_color(custom_cursor, bitmap_mask_color(screen));\n  for (c = 0; c < 8; c++)\n    circle(custom_cursor, 16, 16, c * 2, palette_color[c] ?? 0);\n\n  /* select the custom cursor and set the focus point to the middle of it */\n  set_mouse_sprite(custom_cursor);\n  set_mouse_sprite_focus(16, 16);\n\n  clear_to_color(screen, makecol(255, 255, 255));\n  textout_centre_ex(\n    screen,\n    font,\n    \"Press a key to quit\",\n    SCREEN_W / 2,\n    SCREEN_H / 2,\n    makecol(0, 0, 0),\n    makecol(255, 255, 255)\n  );\n  show_mouse(screen);\n  await readkey();\n  show_mouse(null);\n\n  destroy_bitmap(custom_cursor);\n\n  return 0;\n}\n\nEND_OF_MAIN();\n\n// Start\ninit_allegro_ts(\"canvas_id\", main);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t305: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkallegro_ts_examples\"] = self[\"webpackChunkallegro_ts_examples\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [512], () => (__webpack_require__(808)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","enable_debug","END_OF_MAIN","init_allegro_ts","mickeyx","mickeyy","custom_cursor","c","allegro_init","install_keyboard","install_timer","set_gfx_mode","GFX_AUTODETECT","GFX_SAFE","GFX_TEXT","allegro_message","allegro_error","set_palette","desktop_palette","clear_to_color","screen","makecol","install_mouse","textout_centre_ex","font","SCREEN_W","SCREEN_H","readkey","textprintf_centre_ex","mouse_driver","name","poll_mouse","acquire_screen","textprintf_ex","mouse_x","mouse_y","get_mouse_mickeys","mouse_b","textout_ex","mouse_z","mouse_w","fc","bc","textprintf_right_ex","i","y","print_all_buttons","release_screen","vsync","rest","keypressed","clear_keybuf","show_mouse","create_bitmap","bitmap_mask_color","circle","palette_color","set_mouse_sprite","set_mouse_sprite_focus","destroy_bitmap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}