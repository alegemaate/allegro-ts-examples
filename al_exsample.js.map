{"version":3,"file":"al_exsample.js","mappings":"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","sources":["webpack://allegro-ts-examples/webpack/runtime/chunk loaded","webpack://allegro-ts-examples/./src/al_exsample.ts","webpack://allegro-ts-examples/webpack/bootstrap","webpack://allegro-ts-examples/webpack/runtime/compat get default export","webpack://allegro-ts-examples/webpack/runtime/define property getters","webpack://allegro-ts-examples/webpack/runtime/hasOwnProperty shorthand","webpack://allegro-ts-examples/webpack/runtime/jsonp chunk loading","webpack://allegro-ts-examples/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n *    Example program for the Allegro library, by Shawn Hargreaves.\n *\n *    This program demonstrates how to play samples. You have to\n *    use this example from the command line to specify as first\n *    parameter a WAV or VOC sound file to play. If the file is\n *    loaded successfully, the sound will be played in an infinite\n *    loop. While it is being played, you can use the left and right\n *    arrow keys to modify the panning of the sound. You can also\n *    use the up and down arrow keys to modify the pitch.\n */\n\nimport {\n  screen,\n  SAMPLE,\n  allegro_init,\n  allegro_message,\n  install_keyboard,\n  install_timer,\n  install_sound,\n  DIGI_AUTODETECT,\n  MIDI_NONE,\n  allegro_error,\n  load_sample,\n  set_gfx_mode,\n  GFX_AUTODETECT,\n  adjust_sample,\n  clear_to_color,\n  desktop_palette,\n  destroy_sample,\n  END_OF_MAIN,\n  font,\n  GFX_SAFE,\n  GFX_TEXT,\n  key,\n  KEY_DOWN,\n  KEY_ESC,\n  KEY_LEFT,\n  KEY_RIGHT,\n  KEY_SPACE,\n  KEY_UP,\n  makecol,\n  play_sample,\n  poll_keyboard,\n  rest,\n  SCREEN_H,\n  SCREEN_W,\n  set_palette,\n  textprintf_centre_ex,\n  digi_driver,\n  init_allegro_ts,\n  enable_debug,\n} from \"allegro-ts\";\n\nasync function main() {\n  enable_debug(\"debug\");\n\n  let the_sample: SAMPLE | null = null;\n  let pan = 128;\n  let pitch = 1000;\n\n  const argc = 2;\n  const argv = [\"\", \"assets/munch.mp3\"];\n\n  if (allegro_init() != 0) return 1;\n\n  if (argc != 2) {\n    allegro_message(\"Usage: 'exsample filename.[wav|voc]'\\n\");\n    return 1;\n  }\n\n  install_keyboard();\n  install_timer();\n\n  /* install a digital sound driver */\n  if (install_sound(DIGI_AUTODETECT, MIDI_NONE, null) != 0) {\n    allegro_message(\"Error initialising sound system\\n%s\\n\", allegro_error);\n    return 1;\n  }\n\n  /* read in the WAV file */\n  the_sample = await load_sample(argv[1]);\n\n  if (!the_sample) {\n    allegro_message(\"Error reading WAV file '%s'\\n\", argv[1]);\n    return 1;\n  }\n\n  if (set_gfx_mode(GFX_AUTODETECT, 320, 200, 0, 0) != 0) {\n    if (set_gfx_mode(GFX_SAFE, 320, 200, 0, 0) != 0) {\n      set_gfx_mode(GFX_TEXT, 0, 0, 0, 0);\n      allegro_message(\"Unable to set any graphic mode\\n%s\\n\", allegro_error);\n      return 1;\n    }\n  }\n\n  set_palette(desktop_palette);\n  clear_to_color(screen, makecol(255, 255, 255));\n\n  textprintf_centre_ex(\n    screen,\n    font,\n    SCREEN_W / 2,\n    SCREEN_H / 3,\n    makecol(0, 0, 0),\n    -1,\n    \"Driver: %s\",\n    digi_driver.name\n  );\n  textprintf_centre_ex(\n    screen,\n    font,\n    SCREEN_W / 2,\n    SCREEN_H / 2,\n    makecol(0, 0, 0),\n    -1,\n    \"Playing %s\",\n    argv[1]\n  );\n  textprintf_centre_ex(\n    screen,\n    font,\n    SCREEN_W / 2,\n    (SCREEN_H * 2) / 3,\n    makecol(0, 0, 0),\n    -1,\n    \"Use the arrow keys to adjust it\"\n  );\n\n  /* start up the sample */\n  play_sample(the_sample, 255, pan, pitch, true);\n\n  do {\n    poll_keyboard();\n\n    /* alter the pan position? */\n    if (key[KEY_LEFT] && pan > 0) pan--;\n    else if (key[KEY_RIGHT] && pan < 255) pan++;\n\n    /* alter the pitch? */\n    if (key[KEY_UP] && pitch < 16384) pitch = (pitch * 513) / 512 + 1;\n    else if (key[KEY_DOWN] && pitch > 64) pitch = (pitch * 511) / 512 - 1;\n\n    /* adjust the sample */\n    adjust_sample(the_sample, 255, pan, pitch, true);\n\n    /* delay a bit */\n    await rest(16);\n  } while (!key[KEY_ESC] && !key[KEY_SPACE]);\n\n  /* destroy the sample */\n  destroy_sample(the_sample);\n\n  return 0;\n}\n\nEND_OF_MAIN();\n\ninit_allegro_ts(\"canvas_id\", main);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t286: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkallegro_ts_examples\"] = self[\"webpackChunkallegro_ts_examples\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [512], () => (__webpack_require__(993)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","END_OF_MAIN","init_allegro_ts","enable_debug","the_sample","pan","pitch","argv","allegro_init","install_keyboard","install_timer","install_sound","DIGI_AUTODETECT","MIDI_NONE","allegro_message","allegro_error","load_sample","set_gfx_mode","GFX_AUTODETECT","GFX_SAFE","GFX_TEXT","set_palette","desktop_palette","clear_to_color","screen","makecol","textprintf_centre_ex","font","SCREEN_W","SCREEN_H","digi_driver","name","play_sample","poll_keyboard","key","KEY_LEFT","KEY_RIGHT","KEY_UP","KEY_DOWN","adjust_sample","rest","KEY_ESC","KEY_SPACE","destroy_sample","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}