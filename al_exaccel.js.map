{"version":3,"file":"al_exaccel.js","mappings":"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","sources":["webpack://allegro-ts-examples/webpack/runtime/chunk loaded","webpack://allegro-ts-examples/./src/al_exaccel.ts","webpack://allegro-ts-examples/webpack/bootstrap","webpack://allegro-ts-examples/webpack/runtime/compat get default export","webpack://allegro-ts-examples/webpack/runtime/define property getters","webpack://allegro-ts-examples/webpack/runtime/hasOwnProperty shorthand","webpack://allegro-ts-examples/webpack/runtime/jsonp chunk loading","webpack://allegro-ts-examples/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n *    Example program for the Allegro library, by Shawn Hargreaves.\n *\n *    This program demonstrates how to use an offscreen part of\n *    the video memory to store source graphics for a hardware\n *    accelerated graphics driver. The example loads the `mysha.pcx'\n *    file and then blits it several times on the screen. Depending\n *    on whether you have enough video memory and Allegro supports\n *    the hardware acceleration features of your card, your success\n *    running this example may be none at all, sluggish performance\n *    due to software emulation, or flicker free smooth hardware\n *    accelerated animation.\n */\n\nimport {\n  acquire_bitmap,\n  allegro_init,\n  allegro_message,\n  blit,\n  clear_bitmap,\n  create_video_bitmap,\n  destroy_bitmap,\n  END_OF_MAIN,\n  font,\n  install_keyboard,\n  install_timer,\n  SCREEN_H,\n  SCREEN_W,\n  set_gfx_mode,\n  BITMAP,\n  load_bitmap,\n  AL_RAND,\n  RGB,\n  KEY_DOWN,\n  KEY_LEFT,\n  KEY_RIGHT,\n  KEY_UP,\n  keypressed,\n  readkey,\n  KEY_ESC,\n  show_video_bitmap,\n  release_bitmap,\n  textout_ex,\n  textprintf_ex,\n  GFX_HW_FILL,\n  gfx_capabilities,\n  GFX_HW_VRAM_BLIT,\n  enable_debug,\n  allegro_ready,\n  GFX_AUTODETECT,\n  GFX_TEXT,\n  allegro_error,\n  rest,\n  set_palette,\n  init_allegro_ts,\n} from \"allegro-ts\";\n\nenable_debug(\"debug\");\n\nconst MAX_IMAGES = 256;\n\n/* structure to hold the current position and velocity of an image */\ntype IMAGE = {\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n};\n\n/* initialises an image structure to a random position and velocity */\nfunction init_image(image: IMAGE) {\n  image.x = AL_RAND() % 704;\n  image.y = AL_RAND() % 568;\n  image.dx = ((AL_RAND() % 255) - 127) / 32.0;\n  image.dy = ((AL_RAND() % 255) - 127) / 32.0;\n}\n\n/* called once per frame to bounce an image around the screen */\nfunction update_image(image: IMAGE) {\n  image.x += image.dx;\n  image.y += image.dy;\n\n  if ((image.x < 0 && image.dx < 0) || (image.x > 703 && image.dx > 0))\n    image.dx *= -1;\n\n  if ((image.y < 0 && image.dy < 0) || (image.y > 567 && image.dy > 0))\n    image.dy *= -1;\n}\n\nasync function main() {\n  const buf = \"assets/mysha.png\";\n  const pal: RGB = { r: 0, b: 0, g: 0 };\n  let image: BITMAP | null = null;\n  const page: BITMAP[] = [];\n  let vimage: BITMAP | null = null;\n\n  const images: IMAGE[] = [];\n  let num_images = 4;\n  let page_num = 1;\n  let done = false;\n  let i: number;\n\n  if (allegro_init() != 0) return 1;\n  install_keyboard();\n  install_timer();\n\n  /* see comments in exflip.c */\n  if (set_gfx_mode(GFX_AUTODETECT, 1024, 768, 0, 2 * 768 + 200) != 0) {\n    set_gfx_mode(GFX_TEXT, 0, 0, 0, 0);\n    allegro_message(\"Error setting graphics mode\\n%s\\n\", allegro_error);\n    return 1;\n  }\n\n  /* read in the source graphic */\n  image = load_bitmap(buf, pal);\n  if (!image) {\n    set_gfx_mode(GFX_TEXT, 0, 0, 0, 0);\n    allegro_message(\"Error reading %s!\\n\", buf);\n    return 1;\n  }\n\n  await allegro_ready();\n\n  set_palette(pal);\n\n  /* initialise the images to random positions */\n  for (i = 0; i < MAX_IMAGES; i++) {\n    const new_image: IMAGE = { x: 0, y: 0, dx: 0, dy: 0 };\n    init_image(new_image);\n    images.push(new_image);\n  }\n\n  /* create two video memory bitmaps for page flipping */\n  page[0] = create_video_bitmap(SCREEN_W, SCREEN_H);\n  page[1] = create_video_bitmap(SCREEN_W, SCREEN_H);\n\n  /* create a video memory bitmap to store our picture */\n  vimage = create_video_bitmap(image.w, image.h);\n\n  if (!page[0] || !page[1] || !vimage) {\n    set_gfx_mode(GFX_TEXT, 0, 0, 0, 0);\n    allegro_message(\n      \"Not enough video memory (need two 1024x768 pages and a 320x200 image)\\n\"\n    );\n    return 1;\n  }\n\n  /* copy the picture into offscreen video memory */\n  blit(image, vimage, 0, 0, 0, 0, image.w, image.h);\n\n  while (!done) {\n    acquire_bitmap(page[page_num]);\n\n    /* clear the screen */\n    clear_bitmap(page[page_num]);\n\n    /* draw onto it */\n    for (i = 0; i < num_images; i++) {\n      blit(\n        vimage,\n        page[page_num],\n        0,\n        0,\n        images[i]?.x ?? 0,\n        images[i]?.y ?? 0,\n        vimage.w,\n        vimage.h\n      );\n    }\n\n    textprintf_ex(\n      page[page_num],\n      font,\n      0,\n      0,\n      255,\n      -1,\n      \"Images: %d (arrow keys to change)\",\n      num_images\n    );\n\n    /* tell the user which functions are being done in hardware */\n    if (gfx_capabilities & GFX_HW_FILL)\n      textout_ex(\n        page[page_num],\n        font,\n        \"Clear: hardware accelerated\",\n        0,\n        16,\n        255,\n        -1\n      );\n    else\n      textout_ex(\n        page[page_num],\n        font,\n        \"Clear: software (urgh, this is not good!)\",\n        0,\n        16,\n        255,\n        -1\n      );\n\n    if (gfx_capabilities & GFX_HW_VRAM_BLIT)\n      textout_ex(\n        page[page_num],\n        font,\n        \"Blit: hardware accelerated\",\n        0,\n        32,\n        255,\n        -1\n      );\n    else\n      textout_ex(\n        page[page_num],\n        font,\n        \"Blit: software (urgh, this program will run too sloooooowly without hardware acceleration!)\",\n        0,\n        32,\n        255,\n        -1\n      );\n\n    release_bitmap(page[page_num]);\n\n    /* page flip */\n    show_video_bitmap(page[page_num]);\n    page_num = 1 - page_num;\n\n    /* deal with keyboard input */\n    while (keypressed()) {\n      const val = (await readkey()) >> 8;\n      switch (val) {\n        case KEY_UP:\n        case KEY_RIGHT:\n          if (num_images < MAX_IMAGES) num_images++;\n          break;\n\n        case KEY_DOWN:\n        case KEY_LEFT:\n          if (num_images > 0) num_images--;\n          break;\n\n        case KEY_ESC:\n          done = true;\n          break;\n      }\n    }\n\n    /* bounce the images around the screen */\n    images.forEach((image) => update_image(image));\n\n    await rest(16);\n  }\n\n  destroy_bitmap(image);\n  destroy_bitmap(vimage);\n  destroy_bitmap(page[0]);\n  destroy_bitmap(page[1]);\n\n  return 0;\n}\nEND_OF_MAIN();\n\n// Start\ninit_allegro_ts(\"canvas_id\", main);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t856: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkallegro_ts_examples\"] = self[\"webpackChunkallegro_ts_examples\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [512], () => (__webpack_require__(455)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","init_image","image","x","AL_RAND","y","dx","dy","enable_debug","END_OF_MAIN","init_allegro_ts","buf","pal","r","b","g","page","vimage","images","num_images","page_num","done","allegro_init","install_keyboard","install_timer","set_gfx_mode","GFX_AUTODETECT","GFX_TEXT","allegro_message","allegro_error","load_bitmap","allegro_ready","set_palette","i","new_image","push","create_video_bitmap","SCREEN_W","SCREEN_H","w","h","blit","acquire_bitmap","clear_bitmap","textprintf_ex","font","gfx_capabilities","GFX_HW_FILL","textout_ex","GFX_HW_VRAM_BLIT","release_bitmap","show_video_bitmap","keypressed","readkey","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_LEFT","KEY_ESC","forEach","update_image","rest","destroy_bitmap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","Object","keys","every","key","splice","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}