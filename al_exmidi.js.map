{"version":3,"file":"al_exmidi.js","mappings":"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","sources":["webpack://allegro-ts-examples/webpack/runtime/chunk loaded","webpack://allegro-ts-examples/./src/al_exmidi.ts","webpack://allegro-ts-examples/webpack/bootstrap","webpack://allegro-ts-examples/webpack/runtime/compat get default export","webpack://allegro-ts-examples/webpack/runtime/define property getters","webpack://allegro-ts-examples/webpack/runtime/hasOwnProperty shorthand","webpack://allegro-ts-examples/webpack/runtime/jsonp chunk loading","webpack://allegro-ts-examples/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n *    Example program for the Allegro library, by Shawn Hargreaves.\n *\n *    This program demonstrates how to play MIDI files.\n */\n\nimport {\n  allegro_init,\n  allegro_message,\n  END_OF_MAIN,\n  install_keyboard,\n  SCREEN_H,\n  SCREEN_W,\n  set_gfx_mode,\n  screen,\n  GFX_TEXT,\n  GFX_AUTODETECT,\n  GFX_SAFE,\n  allegro_error,\n  readkey,\n  set_palette,\n  MIDI,\n  install_timer,\n  install_sound,\n  DIGI_AUTODETECT,\n  MIDI_AUTODETECT,\n  set_display_switch_mode,\n  SWITCH_BACKGROUND,\n  SWITCH_BACKAMNESIA,\n  desktop_palette,\n  clear_to_color,\n  font,\n  keypressed,\n  makecol,\n  rectfill,\n  rest,\n  textprintf_centre_ex,\n  text_height,\n  text_length,\n  KEY_P,\n  load_midi,\n  get_midi_length,\n  midi_pos,\n  midi_driver,\n  play_midi,\n  midi_time,\n  midi_resume,\n  destroy_midi,\n  midi_pause,\n  enable_debug,\n  allegro_ready,\n  init_allegro_ts,\n} from \"allegro-ts\";\n\nenable_debug(\"debug\");\n\nasync function main() {\n  let the_music: MIDI | null = null;\n  let length = 0,\n    pos = 0;\n  let beats = 0,\n    beat = 0;\n  let x = 0,\n    y = 0,\n    tw = 0,\n    th = 0;\n  let background_color = 0;\n  let text_color = 0;\n  let paused = false;\n  let done = 0;\n\n  const argc = 2;\n  const argv = [\"\", \"assets/sample.mid\"];\n\n  if (allegro_init() != 0) return 1;\n\n  if (argc != 2) {\n    allegro_message(\"Usage: 'exmidi filename.mid'\\n\");\n    return 1;\n  }\n\n  install_keyboard();\n  install_timer();\n\n  /* install a MIDI sound driver */\n  if (install_sound(DIGI_AUTODETECT, MIDI_AUTODETECT, null) != 0) {\n    allegro_message(\"Error initialising sound system\\n%s\\n\", allegro_error);\n    return 1;\n  }\n\n  /* read in the MIDI file */\n  the_music = await load_midi(argv[1] ?? \"\");\n\n  await allegro_ready();\n\n  if (!the_music) {\n    allegro_message(\"Error reading MIDI file '%s'\\n\", argv[1] ?? \"\");\n    return 1;\n  }\n\n  length = get_midi_length(the_music);\n  beats = -midi_pos; /* get_midi_length updates midi_pos to the negative\n                         number of beats (quarter notes) in the midi. */\n\n  if (set_gfx_mode(GFX_AUTODETECT, 320, 200, 0, 0) != 0) {\n    if (set_gfx_mode(GFX_SAFE, 320, 200, 0, 0) != 0) {\n      set_gfx_mode(GFX_TEXT, 0, 0, 0, 0);\n      allegro_message(\"Unable to set any graphic mode\\n%s\\n\", allegro_error);\n      return 1;\n    }\n  }\n\n  /* try to continue in the background */\n  if (set_display_switch_mode(SWITCH_BACKGROUND))\n    set_display_switch_mode(SWITCH_BACKAMNESIA);\n\n  set_palette(desktop_palette);\n  background_color = makecol(255, 255, 255);\n  text_color = makecol(0, 0, 0);\n  clear_to_color(screen, background_color);\n  th = text_height(font);\n  x = SCREEN_W / 2;\n\n  textprintf_centre_ex(\n    screen,\n    font,\n    x,\n    SCREEN_H / 3,\n    text_color,\n    -1,\n    \"Driver: %s\",\n    midi_driver.name\n  );\n  textprintf_centre_ex(\n    screen,\n    font,\n    x,\n    SCREEN_H / 2,\n    text_color,\n    -1,\n    \"Playing %s\",\n    argv[1] ?? \"\"\n  );\n\n  /* start up the MIDI file */\n  play_midi(the_music, true);\n\n  y = (2 * SCREEN_H) / 3;\n  tw = text_length(font, \"0000:00 / 0000:00\");\n  /* wait for a key press */\n  while (!done) {\n    /* P key pauses/resumes, any other key exits. */\n    while (keypressed()) {\n      const k = (await readkey()) & 255;\n      if (k == KEY_P) {\n        paused = !paused;\n        if (paused) {\n          midi_pause();\n          textprintf_centre_ex(\n            screen,\n            font,\n            x,\n            y + th * 3,\n            text_color,\n            -1,\n            \"P A U S E D\"\n          );\n        } else {\n          midi_resume();\n          rectfill(\n            screen,\n            x - tw / 2,\n            y + th * 3,\n            x + tw / 2,\n            y + th * 4,\n            background_color\n          );\n        }\n      } else done = 1;\n    }\n    pos = midi_time;\n    beat = midi_pos;\n    rectfill(screen, x - tw / 2, y, x + tw / 2, y + th * 2, background_color);\n    textprintf_centre_ex(\n      screen,\n      font,\n      x,\n      y,\n      text_color,\n      -1,\n      \"%d:%02d / %d:%02d\",\n      pos / 60,\n      pos % 60,\n      length / 60,\n      length % 60\n    );\n    textprintf_centre_ex(\n      screen,\n      font,\n      x,\n      y + th,\n      text_color,\n      -1,\n      \"beat %d / %d\",\n      beat,\n      beats\n    );\n    /* We have nothing else to do. */\n    await rest(100);\n  }\n\n  /* destroy the MIDI file */\n  destroy_midi(the_music);\n\n  return 0;\n}\n\nEND_OF_MAIN();\n\n// Start\ninit_allegro_ts(\"canvas_id\", main);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t547: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkallegro_ts_examples\"] = self[\"webpackChunkallegro_ts_examples\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [512], () => (__webpack_require__(210)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","enable_debug","END_OF_MAIN","init_allegro_ts","the_music","length","pos","beats","beat","x","y","tw","th","background_color","text_color","paused","done","argv","allegro_init","install_keyboard","install_timer","install_sound","DIGI_AUTODETECT","MIDI_AUTODETECT","allegro_message","allegro_error","load_midi","allegro_ready","get_midi_length","midi_pos","set_gfx_mode","GFX_AUTODETECT","GFX_SAFE","GFX_TEXT","set_display_switch_mode","SWITCH_BACKGROUND","SWITCH_BACKAMNESIA","set_palette","desktop_palette","makecol","clear_to_color","screen","text_height","font","SCREEN_W","textprintf_centre_ex","SCREEN_H","midi_driver","name","play_midi","text_length","keypressed","readkey","KEY_P","midi_pause","midi_resume","rectfill","midi_time","rest","destroy_midi","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}