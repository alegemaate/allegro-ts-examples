{"version":3,"file":"exturtle.js","mappings":"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","sources":["webpack://allegro-ts-examples/webpack/runtime/chunk loaded","webpack://allegro-ts-examples/./src/exturtle.ts","webpack://allegro-ts-examples/webpack/bootstrap","webpack://allegro-ts-examples/webpack/runtime/compat get default export","webpack://allegro-ts-examples/webpack/runtime/define property getters","webpack://allegro-ts-examples/webpack/runtime/hasOwnProperty shorthand","webpack://allegro-ts-examples/webpack/runtime/jsonp chunk loading","webpack://allegro-ts-examples/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/// Transliterated turtle program from\n/// https://github.com/alegemaate/CTurtle\n\nimport {\n  allegro_init,\n  BITMAP,\n  clear_to_color,\n  create_bitmap,\n  draw_sprite,\n  enable_debug,\n  END_OF_MAIN,\n  getb,\n  getg,\n  getr,\n  GFX_AUTODETECT_WINDOWED,\n  init_allegro_ts,\n  install_keyboard,\n  key,\n  KEY_ESC,\n  KEY_R,\n  KEY_X,\n  KEY_Z,\n  line,\n  makecol,\n  rand,\n  rest,\n  screen,\n  SCREEN_H,\n  SCREEN_W,\n  set_color_depth,\n  set_gfx_mode,\n  set_window_title,\n} from \"allegro-ts\";\n\nenable_debug(\"debug\");\n\n// Struct turtle\ntype Turtle = {\n  // Screen position\n  x: number;\n  y: number;\n\n  // Angle in degrees\n  angle: number;\n\n  // Draw or naw?\n  pendown: boolean;\n\n  // Color\n  pencolor: number;\n\n  // Draw to this\n  penbuffer: BITMAP;\n};\n\n// Turtle functions\n// Move forward\nfunction fd(t: Turtle, amount: number) {\n  // Calc new x and y\n  const new_x = Math.cos(t.angle * (Math.PI / 180)) * amount + t.x;\n  const new_y = Math.sin(t.angle * (Math.PI / 180)) * amount + t.y;\n  // Draw pen\n  if (t.pendown == true) line(t.penbuffer, t.x, t.y, new_x, new_y, t.pencolor);\n  // Move turtle to new position\n  t.x = new_x;\n  t.y = new_y;\n}\n\n// Backwords\nfunction bk(t: Turtle, amount: number) {\n  // Just reverse\n  fd(t, -amount);\n}\n\n// Right turn\nfunction rt(t: Turtle, amount: number) {\n  t.angle += amount;\n}\n\n// Left turn\nfunction lt(t: Turtle, amount: number) {\n  rt(t, -amount);\n}\n\n// Buffer\nlet buffer: BITMAP;\n\n// Draw buffer\nlet pen_buffer: BITMAP;\n\n// Random\nfunction random(min: number, max: number): number {\n  // Gen\n  const random_number = (rand() % (max - min)) + min;\n  return random_number;\n}\n\n// Make our turtle\nlet turt: Turtle;\n\n// Draws a tree with defined length\nfunction tree(t: Turtle, length: number, precision: number, scale: number) {\n  t.pencolor = makecol(\n    (getr(t.pencolor) + 1) % 255,\n    (getg(t.pencolor) + 1) % 255,\n    (getb(t.pencolor) + 1) % 255\n  );\n  if (length >= precision) {\n    fd(t, length * scale);\n    rt(t, 20);\n    tree(t, length - 4, precision, scale);\n    lt(t, 40);\n    tree(t, length - 4, precision, scale);\n    rt(t, 20);\n    bk(t, length);\n  }\n}\n\n// Draws a binary tree with defined length\nfunction binary_tree(\n  t: Turtle,\n  length: number,\n  precision: number,\n  scale: number\n) {\n  t.pencolor = makecol(\n    (getr(t.pencolor) + 1) % 255,\n    (getg(t.pencolor) + 1) % 255,\n    (getb(t.pencolor) + 1) % 255\n  );\n  if (length >= precision) {\n    fd(t, length * scale);\n    rt(t, 90);\n    binary_tree(t, length * 0.7, precision, scale);\n    lt(t, 180);\n    binary_tree(t, length * 0.7, precision, scale);\n    rt(t, 90);\n    bk(t, length);\n  }\n}\n\n// Init\nfunction init() {\n  // Allegro\n  allegro_init();\n  install_keyboard();\n\n  // Screen\n  set_color_depth(32);\n  set_gfx_mode(GFX_AUTODETECT_WINDOWED, 640, 480, 0, 0);\n\n  // Window title\n  set_window_title(\"Koch Curve\");\n\n  // Buffer\n  buffer = create_bitmap(SCREEN_W, SCREEN_H);\n\n  // Pen buffer (for turtles)\n  pen_buffer = create_bitmap(SCREEN_W, SCREEN_H);\n  clear_to_color(pen_buffer, 0x000000);\n\n  // Setup our turtle\n  turt = {\n    x: SCREEN_W / 2,\n    y: SCREEN_H - SCREEN_H / 8,\n    angle: -90,\n    pendown: true,\n    penbuffer: pen_buffer,\n    pencolor: 0xff2255,\n  };\n}\n\n// Update\nfunction update() {\n  turt.pencolor = makecol(random(0, 255), random(0, 255), random(0, 255));\n\n  if (key[KEY_R]) {\n    clear_to_color(pen_buffer, 0x000000);\n  }\n  if (key[KEY_Z]) {\n    binary_tree(turt, 200, 3, 1);\n  }\n  if (key[KEY_X]) {\n    tree(turt, 50, 1, 1);\n  }\n}\n\n// Draw\nfunction draw() {\n  // Fill screen\n  clear_to_color(buffer, 0x000000);\n\n  // Draw turtle buffer\n  draw_sprite(buffer, pen_buffer, 0, 0);\n\n  // Draw buffer\n  draw_sprite(screen, buffer, 0, 0);\n}\n\n// Main\nasync function main() {\n  init();\n\n  while (!key[KEY_ESC]) {\n    update();\n    draw();\n    await rest(16);\n  }\n\n  return 0;\n}\nEND_OF_MAIN();\n\n// Start\ninit_allegro_ts(\"canvas_id\", main);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t718: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkallegro_ts_examples\"] = self[\"webpackChunkallegro_ts_examples\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [512], () => (__webpack_require__(433)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","buffer","pen_buffer","turt","fd","t","amount","new_x","Math","cos","angle","PI","x","new_y","sin","y","pendown","line","penbuffer","pencolor","bk","rt","lt","random","min","max","rand","tree","length","precision","scale","makecol","getr","getg","getb","binary_tree","update","key","KEY_R","clear_to_color","KEY_Z","KEY_X","enable_debug","END_OF_MAIN","init_allegro_ts","allegro_init","install_keyboard","set_color_depth","set_gfx_mode","GFX_AUTODETECT_WINDOWED","set_window_title","create_bitmap","SCREEN_W","SCREEN_H","KEY_ESC","draw_sprite","screen","rest","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}